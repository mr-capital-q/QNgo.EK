@page "/"

@inject QNgo.EK.Engine.TurnEngine _engine;

<div class="d-flex flex-column h-100">
    <div class="flex-fill">
        @if (_card != null)
        {
            <PlayingCard Model="_card" IsFlipped="_isFlipped">
                <FrontFace>
                    <FrontCardFace Model="_card" />
                </FrontFace>
                <BackFace>
                    <BackCardFace />
                </BackFace>
            </PlayingCard>
        }
        <button @onclick="Go">Go</button>
        <button @onclick="() => _isFlipped = !_isFlipped">Flip</button>
    </div>
    <PlayingHand Cards="_cards">
        <CardTemplate>
            <PlayingCard class="card-sm hover" Click="() => SelectCard(context)">
                <FrontFace>
                    <FrontCardFace Model="context" />
                </FrontFace>
                <BackFace>
                    <BackCardFace />
                </BackFace>
            </PlayingCard>
        </CardTemplate>
    </PlayingHand>
</div>



@code {
    private bool _isFlipped;
    private List<QNgo.EK.Abstractions.ICard> _cards = new List<Abstractions.ICard>();
    private QNgo.EK.Abstractions.ICard _card;

    protected async override Task OnInitializedAsync()
    {
        var repo = new QNgo.EK.Engine.FakeCardRepo();
        _cards = (await repo.GetAllCardsAsync()).GroupBy(c => c.Family).Select(g => g.First()).ToList();
    }

    private async void Go()
    {
        await _engine.StartGameAsync();
    }

    private void SelectCard(QNgo.EK.Abstractions.ICard card)
    {
        _card = card;
        StateHasChanged();
    }
}